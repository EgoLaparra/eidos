vars: org/clulab/wm/eidos/grammars/vars.yml
#  agents: "nsubj | nsubjpass | csubj | csubjpass | <acl"  #Comment:  nsubjpass for cause should not be there in an ideal world; but it does show up in practice
#  conjunctions: "appos|conj|conj_|cc"
#  complements: "xcomp|ccomp"
#  modifiers: "amod|compound|dep|name"
#  negTriggers: "not"
#  objects: "dobj"
#  preps: "nmod_of|nmod_in"
#  prep_dobjs: "nmod"
#  quant_modifiers: "amod|advmod"

rules:

  - name: origin-1
    priority: ${ rulepriority }
    example: "More water resulting in an increase of productivity."
    label: ${ label }
    pattern: |
      trigger = [word=/(?i)^(${ trigger })/]
      origin: Entity  = <case
      theme: Entity = <case <nmod_from nmod_to?

  - name: origin-2
    priority: ${ rulepriority }
    example: "More water resulting in an increase of productivity."
    label: ${ label }
    pattern: |
      trigger = [word=/(?i)^(${ trigger })/]
      origin: Entity  = <mark <advcl_for dobj
      theme: Entity = <mark dobj


#  - name: origin-2
#    priority: ${ rulepriority }
#    example: "More water resulting in an increase of productivity."
#    label: ${ label }
#    type: token
#    pattern: |
#      @theme:Entity from the improved @origin:Entity